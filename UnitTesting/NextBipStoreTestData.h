#pragma once

#include "NextBipStore.h"

/*
procedure testA {
1    p = 4;
2    a = p * 2;
3    while (w > 0) {
4        pattern = p * a * a + p * ifs + p * w;
5        if (c == k) {
6            w = w - 1;
		 }
		 else {
7			call testB;
		 }
8        ifs = ifs -1;
	 }
9	read p;
}

procedure testB {
10	ifs = p + a;
11	while (a < 5) {
12		call testC;
	}
}

procedure testC {
13	a = a - 1;
}
*/

std::unordered_map<int, nextBipStruct> expectedStmtNextBipMap = {
	{1, {{}, {2}, {}, {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}}},
	{2, {{1}, {3}, {1}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}}},
	{3, {{2}, {4, 9}, {1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}}},
	{4, {{3}, {5}, {1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}}},
	{5, {{4}, {6, 7}, {1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}}},
	{6, {{5}, {8}, {1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}}},
	{7, {{5}, {10}, {1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}}},
	{8, {{6, 11}, {3}, {1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}}},
	{9, {{3}, {}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}, {}}},
	{10, {{7}, {11}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {7}}},
	{11, {{10, 13}, {8, 12}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {7}}},
	{12, {{11}, {13}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {}}},
	{13, {{12}, {11}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}, {12}}},
};

std::unordered_set<std::pair<int, int>, IntPairHasher> expectedNextBipPairList = {
	{1, 2}, {2, 3}, {3, 4}, {3, 9}, {4, 5}, {5, 6}, {5, 7}, {6, 8}, {7, 10}, {8, 3}, 
	{10, 11}, {11, 8}, {11, 12}, {12, 13}, {13, 11}
};

std::unordered_set<std::pair<int, int>, IntPairHasher> expectedNextBipStarPairList = {
	{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {1, 9}, {1, 10}, {1, 11}, {1, 12}, {1, 13},
	{2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {2, 9}, {2, 10}, {2, 11}, {2, 12}, {2, 13},
	{3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {3, 10}, {3, 11}, {3, 12}, {3, 13},
	{4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 9}, {4, 10}, {4, 11}, {4, 12}, {4, 13},
	{5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 8}, {5, 9}, {5, 10}, {5, 11}, {5, 12}, {5, 13},
	{6, 3}, {6, 4}, {6, 5}, {6, 6}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {6, 11}, {6, 12}, {6, 13},
	{7, 3}, {7, 4}, {7, 5}, {7, 6}, {7, 7}, {7, 8}, {7, 9}, {7, 10}, {7, 11}, {7, 12}, {7, 13},
	{8, 3}, {8, 4}, {8, 5}, {8, 6}, {8, 7}, {8, 8}, {8, 9}, {8, 10}, {8, 11}, {8, 12}, {8, 13},
	{10, 3}, {10, 4}, {10, 5}, {10, 6}, {10, 7}, {10, 8}, {10, 9}, {10, 10}, {10, 11}, {10, 12}, {10, 13},
	{11, 3}, {11, 4}, {11, 5}, {11, 6}, {11, 7}, {11, 8}, {11, 9}, {11, 10}, {11, 11}, {11, 12}, {11, 13},
	{12, 3}, {12, 4}, {12, 5}, {12, 6}, {12, 7}, {12, 8}, {12, 9}, {12, 10}, {12, 11}, {12, 12}, {12, 13},
	{13, 3}, {13, 4}, {13, 5}, {13, 6}, {13, 7}, {13, 8}, {13, 9}, {13, 10}, {13, 11}, {13, 12}, {13, 13}
};

std::unordered_set<int> expectedPrevBipList = { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13};

std::unordered_set<int> expectedNextBipList = { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
